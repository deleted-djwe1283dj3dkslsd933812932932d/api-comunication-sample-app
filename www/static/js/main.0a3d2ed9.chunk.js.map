{"version":3,"sources":["serviceWorker.js","constants.js","components/login/Login.js","components/organization/organizationCard/OrganizationCard.js","components/gm-organizations-bar/GMOrganizationsBar.js","components/organization/OrganizationList.js","index.js","components/login/Login.module.css","components/gm-organizations-bar/GMOrganizationsBar.module.css","components/organization/organizationCard/OrganizationCard.module.css","components/organization/OrganizationList.module.css"],"names":["Boolean","window","location","hostname","match","LOGIN_ENDPOINT","Login","_Component","_getPrototypeOf2","_this","Object","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","concat","initialState","server","username","password","loginFailled","formValid","isLoading","state","objectSpread","serverChangeHandler","event","setState","target","value","getFormValidity","usernameChangeHandler","passwordChangeHandler","submitFormHandler","_this$state","axios","post","headers","Accept","Content-Type","then","response","props","history","push","catch","error","inherits","createClass","key","react_default","a","createElement","className","classes","loginFormContainer","logo","TextField","required","label","margin","variant","onChange","loginButtonContainer","Button","onClick","disabled","loginButton","color","CircularProgress","size","Typography","Snackbar","anchorOrigin","vertical","horizontal","message","open","autoHideDuration","Component","withRouter","OrganizationCard","_PureComponent","options","weekday","year","month","day","date","Date","toLocaleDateString","Card","organizationCard","CardContent","component","organizationKeyContainer","organization","gutterBottom","description","getDateFormatted","creationDate","unitSystem","PureComponent","GMOrganizationsBar","react","AppBar","appbar","position","Toolbar","toolbar","Avatar","greenmileAvatar","material_ui_popup_state_default","popupId","popupState","Fragment","IconButton","assign","edge","aria-label","bindTrigger","Menu_default","Menu_Menu","bindMenu","MenuItem","goBack","ListItemIcon","ExitToAppRounded_default","ListItemText","primary","OrganizationList","organizations","_this2","_this$props$location$","get","auth","data","err","gm_organizations_bar_GMOrganizationsBar","contentContainer","LinearProgress","organizationsContainer","map","o","OrganizationCard_OrganizationCard","id","theme","createMuiTheme","palette","main","secondary","app","MuiThemeProvider","react_router_dom","react_router","path","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","module","exports","progress"],"mappings":"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","file":"static/js/main.0a3d2ed9.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","export const LOGIN_ENDPOINT = 'login';\nexport const ORGANIZATIONS_ENDPOINT = 'Organization';","import React, { Component } from 'react';\nimport axios from 'axios';\nimport { withRouter } from 'react-router'\n\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Typography from '@material-ui/core/Typography';\n\nimport classes from './Login.module.css';\nimport { LOGIN_ENDPOINT } from '../../constants';\n\nexport class Login extends Component {\n\n    initialState = {\n        server: '',\n        username: '',\n        password: '',\n        loginFailled: false,\n        formValid: false,\n        isLoading: false\n    };\n\n    state = { ...this.initialState };\n\n    componentWillMount() {\n        this.setState({\n            ...this.initialState\n        });\n    }\n\n    serverChangeHandler = (event) => {\n        this.setState({\n            server: event.target.value,\n            formValid: this.getFormValidity()\n        }); \n    }\n\n    usernameChangeHandler = (event) => {\n        this.setState({\n            username: event.target.value,\n            formValid: this.getFormValidity() \n        });\n    }\n\n    passwordChangeHandler = (event) => {\n        this.setState({\n            password: event.target.value,\n            formValid: this.getFormValidity()\n        });\n    }\n\n    getFormValidity() {\n        return this.state.server !== '' && this.state.username !== '' && this.state.password !== '';\n    }\n\n    submitFormHandler = () => {\n        this.setState({ isLoading: true });\n\n        const { server, username, password } = this.state;\n\n        axios.post(`${server}/${LOGIN_ENDPOINT}?j_username=${username}&j_password=${password}`, {}, {\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/x-www-form-urlencoded; charset=UTF-8'\n            }\n        }).then(response => {\n            let { history } = this.props;\n            history.push('/organization', { server, username, password });\n        }).catch(error => {\n            this.setState({ ...this.initialState, loginFailled: true })\n        });\n    }\n\n    render() {\n        return (\n            <div className={classes.loginFormContainer}>\n                <div className={classes.logo}></div>\n                <TextField\n                    required\n                    label=\"Server\"\n                    margin=\"normal\"\n                    variant=\"outlined\"\n                    value={this.state.server}\n                    onChange={this.serverChangeHandler}\n                />\n                <TextField\n                    required\n                    label=\"Username\"\n                    margin=\"normal\"\n                    variant=\"outlined\"\n                    value={this.state.username}\n                    onChange={this.usernameChangeHandler}\n                />\n                <TextField\n                    required\n                    label=\"Password\"\n                    margin=\"normal\"\n                    variant=\"outlined\"\n                    value={this.state.password}\n                    onChange={this.passwordChangeHandler}\n                />\n\n                <div className={classes.loginButtonContainer}>\n                    <Button\n                        onClick={this.submitFormHandler}\n                        disabled={!this.state.formValid}\n                        className={classes.loginButton}\n                        variant=\"contained\"\n                        color=\"primary\">\n\n                        {this.state.isLoading ? <CircularProgress color=\"secondary\" size={22} /> : <Typography>Login</Typography>}\n                    </Button>\n                </div>\n\n                <Snackbar\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'center'\n                    }}\n                    message='Username or password are invalid!'\n                    open={this.state.loginFailled}\n                    autoHideDuration={100}>\n                </Snackbar>\n            </div>\n        );\n    }\n}\n\nexport default withRouter(Login); ","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\n\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\n\nimport classes from './OrganizationCard.module.css';\n\nexport class OrganizationCard extends PureComponent {\n\n    options = { weekday: 'long', year: 'numeric', month: 'long', day: 'numeric' };\n\n    getDateFormatted(date) {\n        return new Date(date).toLocaleDateString('en-US', this.options);\n    }\n\n    render() {\n        return (\n            <Card className={classes.organizationCard}>\n                <CardContent>\n                    <Typography variant=\"h5\" component=\"h2\" className={classes.organizationKeyContainer}>\n                        {this.props.organization.key}\n                    </Typography>\n\n                    <Typography color=\"textPrimary\">\n                        Description:\n                    </Typography>\n                    <Typography color=\"textSecondary\" gutterBottom>\n                        {this.props.organization.description}\n                    </Typography>\n\n                    <Typography color=\"textPrimary\">\n                        Creation Date: \n                    </Typography>\n                    <Typography color=\"textSecondary\">\n                        {this.getDateFormatted(this.props.organization.creationDate)}\n                    </Typography>\n\n                    <Typography color=\"textPrimary\">\n                        Unit System:\n                    </Typography>\n                    <Typography color=\"textSecondary\">\n                        {this.props.organization.unitSystem}\n                    </Typography>\n                </CardContent>\n            </Card>\n        )\n    }\n}\n\nOrganizationCard.propTypes = {\n    organization: PropTypes.shape({\n        id: PropTypes.number.isRequired,\n        key: PropTypes.string.isRequired,\n        description: PropTypes.string.isRequired,\n        creationDate: PropTypes.string,\n        unitSystem: PropTypes.string.isRequired,\n    })\n}","import React, { PureComponent, Fragment } from \"react\";\n\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport Typography from '@material-ui/core/Typography';\nimport Avatar from '@material-ui/core/Avatar';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport PopupState, { bindTrigger, bindMenu } from 'material-ui-popup-state';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ExitToAppRounded from '@material-ui/icons/ExitToAppRounded';\n\nimport classes from './GMOrganizationsBar.module.css';\n\nexport class GMOrganizationsBar extends PureComponent {\n\n    render() {\n        return (\n            <Fragment>\n                <AppBar className={classes.appbar} position=\"fixed\">\n                    <Toolbar className={classes.toolbar}>\n                        <Avatar className={classes.greenmileAvatar}>GM</Avatar>\n\n                        <Typography variant=\"h5\" component=\"h2\">\n                            Organizations\n                        </Typography>\n\n                        <PopupState variant=\"popper\" popupId=\"demo-popup-menu\">\n                            {popupState => (\n                                <React.Fragment>\n                                    <IconButton edge=\"start\" color=\"inherit\" aria-label=\"Menu\" {...bindTrigger(popupState)}>\n                                        <MenuIcon />\n                                    </IconButton>\n                                    <Menu {...bindMenu(popupState)}>\n                                        <MenuItem onClick={() => this.props.history.goBack()}>\n                                            <ListItemIcon>\n                                                <ExitToAppRounded />\n                                            </ListItemIcon>\n                                            <ListItemText primary=\"Logout\" />\n                                        </MenuItem>\n                                    </Menu>\n                                </React.Fragment>\n                            )}\n                        </PopupState>\n                    </Toolbar>\n                </AppBar>\n            </Fragment>\n        );\n    }\n}\n\nexport default GMOrganizationsBar;","import React, { PureComponent, Fragment } from \"react\";\nimport axios from 'axios';\n\n\nimport LinearProgress from '@material-ui/core/LinearProgress';\n\nimport { OrganizationCard } from './organizationCard/OrganizationCard';\nimport { ORGANIZATIONS_ENDPOINT } from \"../../constants\";\n\nimport GMOrganizationsBar from '../gm-organizations-bar/GMOrganizationsBar';\nimport classes from \"./OrganizationList.module.css\";\n\nexport class OrganizationList extends PureComponent {\n\n    state = {\n        organizations: [],\n        isLoading: false\n    }\n\n    componentDidMount() {\n        const {server, username, password} = this.props.location.state;\n        this.setState({ isLoading: true});\n        axios.get(`${server}/${ORGANIZATIONS_ENDPOINT}`, {\n            auth: {\n                username: username,\n                password: password\n            }\n        })\n        .then((response) => {\n            this.setState({\n                isLoading: false,\n                organizations: response.data\n            });\n        }).catch((err) => {\n            this.setState({ isLoading: false });\n        });\n    }\n\n    render() {\n        return (\n            <Fragment>\n                <GMOrganizationsBar history={this.props.history}/>\n\n                <div className={classes.contentContainer}>\n                    {this.state.isLoading ? <LinearProgress color=\"secondary\" /> : null}\n\n                    <div className={classes.organizationsContainer}>\n                        {this.state.organizations.map(o => <OrganizationCard organization={o} key={o.id} />)}\n                    </div>\n                </div>\n            </Fragment>);\n    }\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom'\nimport { createMuiTheme, MuiThemeProvider } from '@material-ui/core/styles';\nimport * as serviceWorker from './serviceWorker';\nimport './index.css';\n\nimport { Login } from './components/login/Login';\nimport { OrganizationList } from './components/organization/OrganizationList';\n\nconst theme = createMuiTheme({\n    palette: {\n        primary: {\n            main: '#009900'\n        },\n        secondary: {\n            main: '#546111'\n        }\n    },\n});\n\nconst app = (\n    <MuiThemeProvider theme={theme}>\n        <BrowserRouter>\n            <Switch>\n                <Route path=\"/organization\" component={OrganizationList} />\n                <Route path=\"/\" component={Login} />\n            </Switch>\n        </BrowserRouter>\n    </MuiThemeProvider>\n);\n\nReactDOM.render(app, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loginFormContainer\":\"Login_loginFormContainer__2vkg6\",\"logo\":\"Login_logo__3YmU4\",\"loginButtonContainer\":\"Login_loginButtonContainer__5UKYo\",\"loginButton\":\"Login_loginButton__18kll\",\"progress\":\"Login_progress__hMhuI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"toolbar\":\"GMOrganizationsBar_toolbar__1rZBc\",\"greenmileAvatar\":\"GMOrganizationsBar_greenmileAvatar__1CVg_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"organizationCard\":\"OrganizationCard_organizationCard__1T_to\",\"organizationKeyContainer\":\"OrganizationCard_organizationKeyContainer__29-VM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contentContainer\":\"OrganizationList_contentContainer__3tpY1\",\"organizationsContainer\":\"OrganizationList_organizationsContainer__2lTsF\"};"],"sourceRoot":""}